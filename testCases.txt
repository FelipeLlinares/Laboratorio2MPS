#DequeNodeTest
1. GetItem devuelve el item del nodo.
2. GetNext devuelve el nodo siguiente.
3. GetPrevious devuelve el nodo anterior.

4. SetItem modifica el item del nodo.
5. SetNext modifica el nodo siguiente.
6. SetPrevious modifica el nodo anterior.

7. isFirst devuelve True si el previo es null.
8. isFirst devuelve False si el previo no es null.
9. isLast devuelve True si el siguiente es null.
10. isLast devuelve False si el siguiente no es null.

11. isNotATerminalNode devuelve True si el previo y el siguiente no son null.
12. isNotATerminalNode devuelve False si el siguiente es null.
13. isNotATerminalNode devuelve False si el anterior es null.
14. isNotATerminalNode devuelve False si el anterior y el siguiente son null.

#DoubleLinkedListQueue

Append y AppendLeft
1. Añadir un nodo nulo deberá lanzar una excepción
2. Añadir un nodo a una lista vacía deberá añadirlo como primero y último.
3. Añadir un nodo a una lista con un único nodo
4. Añadir un nodo en una lista general
5. Añadir un nodo que ya existe no hará nada.
6. Añadir un nodo con referencias next y previous a una lista vacía ignora las dos.
7. Añadir un nodo con referencias next y previous a una lista no vacía ignora las dos.

DeleteFirst y DeleteLast
5. Eliminar en una lista vacía deberá lanzar una excepción
6. Eliminar en una lista con un solo nodo
7. Eliminar en una lista general

Size
8. Lista vacía tiene tamaño cero.
9. Lista con un nodo tiene tamaño uno.
10. Lista con dos nodos tiene tamaño dos.
11. Lista con 5 nodos tiene tamaño 5.
11. Tamaño incremeneta en uno cuando hacemos append.
12. Tamaño incrementa en uno cuando hacemos appendLeft.
13. Tamaño decrementa en uno cuando hacemos delete.

GetAt
12. Posición negativa deberá lanzar una excepción
13. Posición mayor que el tamaño deberá lanzar una excepción
14. Posición 0 deberá devolver el primer nodo
15. Posición size()-1 deberá devolver el último nodo
16. Posición entre 0 y size() deberá devolver el nodo de esa posición.

Find
17. Cuando Item no está en la lista deberá devolver null
18. Cuando Item está en el primer nodo deberá devolver el primer nodo
19. Cuando Item está en el último nodo deberá devolver el último nodo
20. Cuando solo un nodo tiene el Item en la lista deberá devolver ese nodo.
21. Cuando varios nodos tienen el Item en la lista, deberá devolver el primero encontrado.

Delete
21. Eliminar un nodo que no se encuentra no altera la lista
22. Eliminar el primer nodo eliminará el primer nodo
23. Eliminar el último nodo eliminará el último nodo
24. Eliminar un nodo quitará ese nodo de la lista

Sort
25. Ordenar una lista vacía no modifica la lista
26. Ordenar una lista con un solo elemento no modifica la lista.
27. Ordenar una lista con dos elementos.
28 y 29. Ordenar una lista con mas de un elemento, ordenara la lista así como manda el comparador indicado.



